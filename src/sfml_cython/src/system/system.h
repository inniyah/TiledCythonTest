/* Generated by Cython 0.29.21 */

#ifndef __PYX_HAVE__system
#define __PYX_HAVE__system

#include "Python.h"
struct PyVector2Object;
struct PyVector3Object;
struct PyTimeObject;

/* "system.pyx":91
 *     return bytes_string.decode('UTF-32')
 * 
 * cdef public class Vector2[type PyVector2Type, object PyVector2Object]:             # <<<<<<<<<<<<<<
 *     cdef sf.Vector2[NumericObject] *p_this
 * 
 */
struct PyVector2Object {
  PyObject_HEAD
  sf::Vector2<NumericObject>  *p_this;
};

/* "system.pyx":251
 *     return sf.Vector2f(x, y)
 * 
 * cdef public class Vector3[type PyVector3Type, object PyVector3Object]:             # <<<<<<<<<<<<<<
 *     cdef sf.Vector3[NumericObject] *p_this
 * 
 */
struct PyVector3Object {
  PyObject_HEAD
  sf::Vector3<NumericObject>  *p_this;
};

/* "system.pyx":412
 *     return sf.Vector3f(x, y, z)
 * 
 * cdef public class Time[type PyTimeType, object PyTimeObject]:             # <<<<<<<<<<<<<<
 *     ZERO = wrap_time(<sf.Time*>&sf.time.Zero)
 * 
 */
struct PyTimeObject {
  PyObject_HEAD
  sf::Time *p_this;
};

#ifndef __PYX_HAVE_API__system

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#ifndef DL_IMPORT
  #define DL_IMPORT(_T) _T
#endif

__PYX_EXTERN_C DL_IMPORT(PyTypeObject) PyVector2Type;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) PyVector3Type;
__PYX_EXTERN_C DL_IMPORT(PyTypeObject) PyTimeType;

#endif /* !__PYX_HAVE_API__system */

/* WARNING: the interface of the module init function changed in CPython 3.5. */
/* It now returns a PyModuleDef instance instead of a PyModule instance. */

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initsystem(void);
#else
PyMODINIT_FUNC PyInit_system(void);
#endif

#endif /* !__PYX_HAVE__system */
